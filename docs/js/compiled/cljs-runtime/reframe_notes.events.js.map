{"version":3,"sources":["reframe_notes/events.cljs"],"mappings":"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","names":["re_frame.core.reg_event_db","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__43942__auto__","day8.re-frame.debux.common.util/send-trace!","e","e44293","_","reframe-notes.db/default-db","result__43949__auto__","e44294","db","notes","next-id","cljs.core.assoc","cljs.core.conj","p__44295","vec__44296","cljs.core.nth","e44299","p__44300","vec__44301","new-editing-note-id","p__44304","vec__44305","result__43956__auto__","e44308","p__44309","vec__44310","new-title","editing-note-id","new-notes","cljs.core.map","note","cljs.core._EQ_","p__44313","vec__44314","e44317","p__44318","vec__44319","new-body"],"sourcesContent":["(ns reframe-notes.events\n  (:require\n   [re-frame.core :as re-frame]\n   [reframe-notes.db :as db]\n   [day8.re-frame.tracing :refer-macros [fn-traced]]))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn-traced [_ _]\n            db/default-db))\n\n(re-frame/reg-event-db\n ::add-new-note\n (fn-traced [db _]\n            (let [notes (:notes db)\n                  next-id (:next-id db)]\n              (-> db (assoc :notes (conj notes {:id next-id\n                                                :title \"Untitled\"\n                                                :body \"\"}))\n                  (assoc :next-id (+ next-id 1))))))\n\n(re-frame/reg-event-db\n ::change-editing-note-id\n (fn-traced [db [_ new-editing-note-id]]\n            (assoc db :editing-note-id new-editing-note-id)))\n\n(re-frame/reg-event-db\n ::change-title\n (fn-traced [db [_ new-title]]\n            (let [notes (:notes db)\n                  editing-note-id (:editing-note-id db)\n                  new-notes (->> notes\n                                 (map (fn [note] (if (= editing-note-id (:id note))\n                                                   (assoc note :title new-title)\n                                                   note))))]\n              (assoc db :notes new-notes))))\n\n(re-frame/reg-event-db\n ::change-body\n (fn-traced [db [_ new-body]]\n            (let [notes (:notes db)\n                  editing-note-id (:editing-note-id db)\n                  new-notes (->> notes\n                                 (map (fn [note] (if (= editing-note-id (:id note))\n                                                   (assoc note :body new-body)\n                                                   note))))]\n              (assoc db :notes new-notes))))\n"]}